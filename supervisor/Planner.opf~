;; -*-Lisp-*-
;;author: Michelangelo Fiore
;;this files contains an interface for different Planners in the supervision system.

(
 (defop |createPlan|
   :invocation (Planner.createPlan @goal)
   :documentation "this procedure contacts a planner to obtain a new plan for a specified goal and creates the facts Planner.result and Planner.plan to return it"
   :body
   (
    ;update the ID of the current plan
    (?(Planner.planID @planID))
    (!(+ @planID 1))
    (=> (Planner.planID VAL(@planID)))
    (IF(?(Planner.currentPlanner HATP))  ;the idea is that we can plug different planners in this module. It would be nice if we encode also the possibility that the human gives the plan here and the possibility to use 
					;different planners at different moments
       (!(Planner.createPlanHATP @goal @planID $plan))
       
       )
    )
   
)
 (defop |createPlanHATP|
   :invocation (Planner.createPlanHATP @goal @planID $plan)
   :documentation "this procedure contacts HATP to create a plan for a specified @goal and returns it into $plan"
   :body
   (
    (! (= @taskName (CAR @goal)))
    (! (= @taskParameters (CDR @goal)))
    (? (bridgeHATP @bridgeHATP))
    (!(= @HATPPlanningRequest (HATP-REQ (REQ-TYPE plan) (REQ-ID @planID) (PARAMETERS @taskParameters))))
    (!(SEND-MESSAGE @bridgeHATP @HATPPlanningRequest))
    )
   )
 )
