;action stuff
declare cwp Action.conditions
declare cwp Action.type
declare symbol directedToObject

;general symbols
declare symbol TRUE
declare symbol FALSE
declare symbol RIGHT
declare symbol LEFT
declare symbol NO_NAME
declare symbol TORSO

;robot state predicates
declare ff Robot.isMoving 2   ;Robot.isMoving HEAD/RIGHT_ARM/LEFT_ARM/BASE TRUE/FALSE
declare ff Robot.gripperStatus 1    ;Robot.gripperStatus RIGHT/LEFT OPEN/CLOSE/WAITING_PRESSURE 
declare ff Robot.head 1             ;Robot.head PAN/TILT value
declare cwp Robot.position          ;Robot.position JOINT position
declare cwp Robot.pose              ;Robot.pose @arm(RIGHT, LEFT)  @object (NO_NAME or value) @support(NO_NAME or value) @pose (EXTENDED, REST, OTHER). Support means if the arm is on a support or not. Object means if the arm is close to an object or not (doesn't mean that the robot has picked the object)  
declare ff Robot.hasObject 1
declare ff Robot.hasObjectForThrow 1

;symbols for the gripper
declare symbol OPEN
declare symbol CLOSE
declare symbol WAITING_PRESSURE
declare symbol OPEN_AFTER_PRESSURE

;report symbol
declare symbol OK
declare symbol FAILURE
declare symbol CANCELED
declare symbol STOPPED
declare symbol ELAPSED-TIME

declare predicate MAX_PLANNING_WAIT
declare predicate MAX_PLANNING_FAILURES
declare predicate TIME_TO_RETRY
declare predicate SUP_NAME
declare predicate ONTO_NAME
declare ff Robot.gripper 1
